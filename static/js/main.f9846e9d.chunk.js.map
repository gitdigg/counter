{"version":3,"sources":["../../src/counter.js","../../src/thumbup.js","App.js","index.js"],"names":["Counter","got","data","hits","ssns","uids","sessionStorage","persistStorage","a","baseURL","withCredentials","timeout","headers","componentDidMount","this","readonly","url","initHits","initSsns","initUids","localStorage","response","session","persist","render","state","hit","user","className","humanNumber","Thumbup","thumbs","thumbed","initThumbs","onThumbup","onClick","style","cursor","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f9846e9d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport humanNumber from \"human-number\";\n\nexport class Counter extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            got: false,\n            data: {\n                hits: 0,\n                ssns: 0,\n                uids: 0,\n                sessionStorage: \"\",\n                persistStorage: \"\",\n            },\n        }\n        this.api = axios.create({\n            baseURL: this.props.baseURL,\n            withCredentials: true,\n            timeout: 3000,\n            headers: {\n                'Accept': 'application/json'\n            },\n        });\n    }\n    componentDidMount() {\n        const { readonly, url, initHits, initSsns, initUids } = this.props;\n        if (readonly) {\n            let persist = localStorage.getItem(\"_hits_p\")\n            this.api.post(\"/v1/hits.Counter/Get\", {\n                url: url,\n                initHits: initHits === null ? 0 : initHits,\n                initSsns: initSsns === null ? 0 : initSsns,\n                initUids: initUids === null ? 0 : initUids,\n            }).then(\n                (response) => {\n                    this.setState({ got: true, data: response.data })\n                }\n            )\n        } else {\n            let session = sessionStorage.getItem(\"_hits_s\")\n            let persist = localStorage.getItem(\"_hits_p\")\n            this.api.post(\"/v1/hits.Counter/Hit\", {\n                persistStorage: persist === \"undefined\" ? \"\" : persist,\n                sessionStorage: session === \"undefined\" ? \"\" : session,\n                url: url,\n                initHits: initHits === null ? 0 : initHits,\n                initSsns: initSsns === null ? 0 : initSsns,\n                initUids: initUids === null ? 0 : initUids,\n            }).then(\n                (response) => {\n                    this.setState({ got: true, data: response.data })\n                    sessionStorage.setItem(\"_hits_s\", response.data.sessionStorage)\n                    localStorage.setItem(\"_hits_p\", response.data.persistStorage)\n                }\n            )\n        }\n        return this.state\n    }\n\n    render() {\n        const { got } = this.state;\n        const { hits, ssns, uids } = this.state.data;\n        const { hit, session, user, className } = this.props;\n        return (\n            <span className={className}>\n                {\n                    got && hit &&\n                    humanNumber(hits)\n                }\n                {\n                    got && session &&\n                    humanNumber(ssns)\n                }\n                {\n                    got && user &&\n                    humanNumber(uids)\n                }\n            </span>\n        )\n    }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nexport class Thumbup extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            got: false,\n            data: {\n                thumbs: 0,\n                thumbed: false,\n                persistStorage: \"\",\n            },\n        }\n        this.api = axios.create({\n            baseURL: this.props.baseURL,\n            withCredentials: true,\n            timeout: 3000,\n            headers: {\n                'Accept': 'application/json'\n            },\n        });\n        this.onThumbup = this.onThumbup.bind(this);\n    }\n    componentDidMount() {\n        const { baseURL, url, initThumbs } = this.props;\n        let persist = localStorage.getItem(\"_hits_p\")\n        this.api.post(\"/v1/hits.Counter/ThumbGet\", {\n            url: url,\n            persistStorage: persist === \"undefined\" ? \"\" : persist,\n            initThumbs: initThumbs === null ? 0 : initThumbs,\n        }).then(\n            (response) => {\n                this.setState({ got: true, data: response.data })\n                localStorage.setItem(\"_hits_p\", response.data.persistStorage)\n            }\n        )\n        return this.state\n    }\n    onThumbup(e) {\n        const { url, initThumbs } = this.props;\n        let persist = localStorage.getItem(\"_hits_p\")\n        this.api.post(\"/v1/hits.Counter/ThumbUp\", {\n            persistStorage: persist === \"undefined\" ? \"\" : persist,\n            url: url,\n            initThumbs: initThumbs === null ? 0 : initThumbs,\n        }).then(\n            (response) => {\n                this.setState({ data: response.data })\n                localStorage.setItem(\"_hits_p\", response.data.persistStorage)\n            }\n        )\n    }\n    render() {\n        const { thumbs, thumbed } = this.state.data;\n        const { className } = this.props;\n        if (!this.state.got) {\n            return <div className={className}></div>\n        }\n        return (\n            <div onClick={this.onThumbup} className={className} style={{ cursor: 'pointer' }}>\n                <span>\n                    {thumbed ? '★' : '☆'}\n                </span>\n                <span>x{thumbs}</span>\n            </div>\n        )\n    }\n}\n","import React from 'react'\n\nimport { Counter, Thumbup } from 'counter'\n\nconst App = () => {\n  return (\n    <div>\n      <Counter hit baseURL=\"http://localhost:8080\" />\n      <br />\n      <Thumbup baseURL=\"http://localhost:8080\" />\n    </div>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}